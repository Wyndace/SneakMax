{"version":3,"names":[],"mappings":"","sources":["global.js"],"sourcesContent":["// ==== Глобальные скрипты ============================================================================================================================================\n\n// === Анимации, данный скрипт лучше всего оставить подключённым. Без него не работают некоторые скрипты ==============================================================\n\n// === Тут хранятся все JS анимации ===================================================================================================================================\n\nconst ease = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) return c / 2 * t * t + b;\n  t--;\n  return -c / 2 * (t * (t - 2) - 1) + b;\n}\n\n// === Плавная прокрутка ==============================================================================================================================================\n\nconst smoothScrollAnimation = (currentTime) => {\n  if (startTime === null) startTime = currentTime;\n  let timeElapsed = currentTime - startTime;\n  let run = ease(timeElapsed, startPositon, distance, duration);\n  console.log(run)\n  window.scrollTo(0, run);\n  if (timeElapsed < duration) requestAnimationFrame(smoothScrollAnimation)\n};\n\n// ====================================================================================================================================================================\n\n// === Скольжение вверх и вниз ========================================================================================================================================\n\nlet _slideUp = (target, duration = 500) => {\n\tif (!target.classList.contains('_slide')) {\n\t\ttarget.classList.add('_slide');\n\t\ttarget.style.transitionProperty = 'height, margin, padding';\n\t\ttarget.style.transitionDuration = duration + 'ms';\n\t\ttarget.style.height = target.offsetHeight + 'px';\n\t\ttarget.offsetHeight;\n\t\ttarget.style.overflow = 'hidden';\n\t\ttarget.style.height = 0;\n\t\ttarget.style.paddingTop = 0;\n\t\ttarget.style.paddingBottom = 0;\n\t\ttarget.style.marginTop = 0;\n\t\ttarget.style.marginBottom = 0;\n\t\twindow.setTimeout(() => {\n\t\t\ttarget.hidden = true;\n\t\t\ttarget.style.removeProperty('height');\n\t\t\ttarget.style.removeProperty('padding-top');\n\t\t\ttarget.style.removeProperty('padding-bottom');\n\t\t\ttarget.style.removeProperty('margin-top');\n\t\t\ttarget.style.removeProperty('margin-bottom');\n\t\t\ttarget.style.removeProperty('overflow');\n\t\t\ttarget.style.removeProperty('transition-duration');\n\t\t\ttarget.style.removeProperty('transition-property');\n\t\t\ttarget.classList.remove('_slide');\n\t\t}, duration);\n\t}\n}\nlet _slideDown = (target, duration = 500) => {\n\tif (!target.classList.contains('_slide')) {\n\t\ttarget.classList.add('_slide');\n\t\tif (target.hidden) {\n\t\t\ttarget.hidden = false;\n\t\t}\n\t\tlet height = target.offsetHeight;\n\t\ttarget.style.overflow = 'hidden';\n\t\ttarget.style.height = 0;\n\t\ttarget.style.paddingTop = 0;\n\t\ttarget.style.paddingBottom = 0;\n\t\ttarget.style.marginTop = 0;\n\t\ttarget.style.marginBottom = 0;\n\t\ttarget.offsetHeight;\n\t\ttarget.style.transitionProperty = \"height, margin, padding\";\n\t\ttarget.style.transitionDuration = duration + 'ms';\n\t\ttarget.style.height = height + 'px';\n\t\ttarget.style.removeProperty('padding-top');\n\t\ttarget.style.removeProperty('padding-bottom');\n\t\ttarget.style.removeProperty('margin-top');\n\t\ttarget.style.removeProperty('margin-bottom');\n\t\twindow.setTimeout(() => {\n\t\t\ttarget.style.removeProperty('height');\n\t\t\ttarget.style.removeProperty('overflow');\n\t\t\ttarget.style.removeProperty('transition-duration');\n\t\t\ttarget.style.removeProperty('transition-property');\n\t\t\ttarget.classList.remove('_slide');\n\t\t}, duration);\n\t}\n}\nlet _slideToggle = (target, duration = 500) => {\n\tif (target.hidden) {\n\t\treturn _slideDown(target, duration);\n\t} else {\n\t\treturn _slideUp(target, duration);\n\t}\n}\n\n// ====================================================================================================================================================================\n\n;\n\n// ====================================================================================================================================================================\n\n\n// === Smooth scroll to ===============================================================================================================================================\n\nconst smoothScroll = (target, duration) => {\n  const topOffset = document.querySelector('.header').offsetHeight;\n\n  const targetPosition = target.getBoundingClientRect().top + window.scrollY;\n\n  const startPositon = window.pageYOffset;\n\n  const distance = targetPosition - startPositon - topOffset + 5;\n\n  let startTime = null;\n\n  const smoothScrollAnimation = (currentTime) => {\n    if (startTime === null) startTime = currentTime;\n    let timeElapsed = currentTime - startTime;\n    let run = ease(timeElapsed, startPositon, distance, duration);\n    console.log(target)\n    window.scrollTo(0, run);\n    if (timeElapsed < duration) requestAnimationFrame(smoothScrollAnimation)\n  };\n\n  requestAnimationFrame(smoothScrollAnimation);\n}\n\nconst smoothScrollers = document.querySelectorAll('[data-scroll_to]');\nif (smoothScrollers.length > 0) {\n  smoothScrollers.forEach((smoothScroller) => {\n  console.log(smoothScroller)\n    if (smoothScroller.dataset.scroll_to != '') {\n      smoothScroller.addEventListener('click', (e) => {\n        e.preventDefault();\n        const target = document.querySelector(smoothScroller.dataset.scroll_to);\n        smoothScroll(target, 700);\n      });\n    } else {\n      console.log('You must type selector in data-scroll_to');\n    }\n  });\n}\n\n// ====================================================================================================================================================================; // Плавная прокрутка до элемента. ТРЕБУЕТ _animation.js\n// === Scroll disabling ===============================================================================================================================================\n\nconst scrollDisabling = (element, positon) => {\n  if (!element.classList.contains('_scroll-disabled') && !element.classList.contains('_scroll-disabled_horizontal') && !element.classList.contains('_scroll-disabled_vertical')) {\n    if (positon == \"verical\") {\n      element.classList.add('_scroll-disabled_vertical');\n    } else if (positon == \"horizontal\") {\n      element.classList.add('_scroll-disabled_horizontal');\n    } else {\n      element.classList.add('_scroll-disabled');\n    }\n  }\n};\n\nconst scrollDisablers = document.querySelectorAll('[data-scroll_disable]');\nif (scrollDisablers.length > 0) {\n  for (scrollDisabler of scrollDisablers) {\n    positon = scrollDisabler.dataset.scroll_disable;\n    scrollDisabling(scrollDisabler, positon);\n  }\n}\n\n// ====================================================================================================================================================================; // Полное отключение прокрутки у элемента.\n// === spoilerCreator =================================================================================================================================================\n\nconst initSpoilerBody = (spoilersBlock, hideSpoilerBody = true) => {\n  const spoilerTitles = spoilersBlock.querySelectorAll('[data-spoiler]');\n  if (spoilerTitles.length > 0) {\n    spoilerTitles.forEach(spoilerTitle => {\n      if (hideSpoilerBody) {\n        spoilerTitle.removeAttribute('tabindex');\n        if (!spoilerTitle.classList.contains('_active')) {\n          spoilerTitle.nextElementSibling.hidden = true;\n        }\n      } else {\n        spoilerTitle.setAttribute('tabindex', '-1');\n        spoilerTitle.nextElementSibling.hidden = false;\n      }\n    });\n  }\n}\n\nconst setSpoilerAction = (e) => {\n  const el = e.target;\n  if (el.hasAttribute('data-spoiler') || el.closest('[data-spoiler]')) {\n    const spoilerTitle = el.hasAttribute('data-spoiler') ? el : el.closest('[data-spoiler]');\n    const spoilersBlock = spoilerTitle.closest('[data-spoilers]');\n    const oneSpoiler = spoilersBlock.hasAttribute('data-one-spoiler') ? true : false;\n    if (!spoilersBlock.querySelectorAll('._slide').length) {\n      if (oneSpoiler && !spoilerTitle.classList.contains('_active')) {\n        hideSpoilersBody(spoilersBlock);\n      }\n      spoilerTitle.classList.toggle('_active');\n      _slideToggle(spoilerTitle.nextElementSibling, 500);\n    }\n    e.preventDefault();\n  }\n}\nconst hideSpoilersBody = (spoilersBlock) => {\n  const spoilerActiveTitle = spoilersBlock.querySelector('[data-spoiler]._active');\n  if (spoilerActiveTitle) {\n    spoilerActiveTitle.classList.remove('_active');\n    _slideUp(spoilerActiveTitle.nextElementSibling, 500);\n  }\n}\n\nconst initSpoilers = (spoilersArray, matchMedia = false) => {\n  spoilersArray.forEach(spoilersBlock => {\n    spoilersBlock = matchMedia ? spoilersBlock.item : spoilersBlock;\n    if (matchMedia.matches || !matchMedia) {\n      spoilersBlock.classList.add('_init');\n      initSpoilerBody(spoilersBlock);\n      spoilersBlock.addEventListener('click', setSpoilerAction);\n    } else {\n      spoilersBlock.classList.remove('_init');\n      initSpoilerBody(spoilersBlock, false);\n      spoilersBlock.removeEventListener('click', setSpoilerAction)\n    }\n  });\n}\n\nconst spoilersArray = document.querySelectorAll('[data-spoilers]')\nif (spoilersArray.length > 0) {\n  const spoilersRegular = Array.from(spoilersArray).filter((item) => {\n    return !item.dataset.spoilers;\n  })\n\n  if (spoilersRegular.length > 0) {\n    initSpoilers(spoilersRegular);\n  }\n\n  const spoilersMedia = Array.from(spoilersArray).filter((item) => {\n    return item.dataset.spoilers;\n  });\n\n  if (spoilersMedia.length > 0) {\n    const breakpointsArray = [];\n    spoilersMedia.forEach(item => {\n      const params = item.dataset.spoilers;\n      const breakpoint = {};\n      const paramsArray = params.split(\", \");\n      breakpoint.value = paramsArray[0];\n      breakpoint.type = paramsArray[1] ? paramsArray[1].trim() : \"max\";\n      breakpoint.item = item;\n      breakpointsArray.push(breakpoint);\n    });\n\n    let mediaQuaries = breakpointsArray.map((item) => {\n      return `(${item.type}-width: ${item.value}px), ${item.value}, ${item.type}`;\n    });\n\n    mediaQuaries = mediaQuaries.filter((item, index, self) => {\n      return self.indexOf(item) === index;\n    });\n\n    mediaQuaries.forEach(breakpoint => {\n      const paramsArray = breakpoint.split(\", \");\n      const mediaBreakpoint = paramsArray[1];\n      const mediaType = paramsArray[2];\n      const matchMedia = window.matchMedia(paramsArray[0]);\n\n      const spoilersArray = breakpointsArray.filter((item) => {\n        if (item.value === mediaBreakpoint && item.type === mediaType) {\n          return true;\n        }\n      });\n      matchMedia.addListener(() => {\n        initSpoilers(spoilersArray, matchMedia);\n      });\n      initSpoilers(spoilersArray, matchMedia);\n    });\n  }\n}\n\n// ====================================================================================================================================================================; // Спойлеры и аккордионы. ТРЕБУЕТ _animation.js\n// === sendingOnPage ==================================================================================================================================================\n\nconst validateEmail = (email) => {\n  const re = /\\S+@\\S+\\.\\S+/;\n  return re.test(email);\n}\n\nconst validatePhone = (input) => {\n  if (input.value.replace(/\\D/g, '') == '') {\n    return false\n  } else {\n    return true;\n  }\n}\n\nconst formAddError = (input) => {\n  input.parentElement.classList.add('_error');\n  input.classList.add('_error');\n}\n\nconst formRemoveError = (input) => {\n  input.parentElement.classList.remove('_error');\n  input.classList.remove('_error');\n}\n\nconst formValidate = (form) => {\n  let error = 0;\n  const formReqiers = form.querySelectorAll('[data-form_require]');\n  console.log(formReqiers)\n  for (let index = 0; index < formReqiers.length; index++) {\n    const input = formReqiers[index];\n    formRemoveError(input);\n    if (input.dataset.form_input_email != null) {\n      if (!validateEmail(input.value)) {\n        formAddError(input);\n        ++error\n      }\n    } else if (input.dataset.form_input_tel != null) {\n      if (!validatePhone(input)) {\n        formAddError(input);\n        ++error\n        console.log(error)\n      }\n    } else if (input.getAttribute('type') === 'checkbox' && !input.checked) {\n      formAddError(input);\n      ++error\n    } else {\n      if (input.value === '') {\n        formAddError(input);\n        ++error;\n      }\n    }\n  }\n\n  return error\n}\nconst forms = document.querySelectorAll('[data-form]');\nconsole.log(forms)\nif (forms.length > 0) {\n  forms.forEach(form => {\n\n    async function formSend(e) {\n      e.preventDefault();\n      let error = formValidate(form);\n      if (error === 0) {\n        form.classList.add('_sending');\n        if (form.dataset.test == null) {\n\n// ЭТО БЕКЕНД ЧАСТЬ!!! ЕСЛИ НЕ ДОБАВИТЬ АТТРИБУТ [data-test] ИЛИ ЖЕ НЕ СДЕЛАТЬ РЕАЛЬНУЮ ОПТРАВКУ ПИСЬМА, ТО БУДЕТ ВЫДАВАТЬ ОШИБКУ И НИЧЕГО НЕ ПРОИЗОЙДЁТ ==============\n\n          let responce = await fetch(mail.php);\n\n          if (responce.ok) {\n            let result = responce.json;\n            alert(result.message);\n            form.reset();\n          } else {\n            alert('Что пошло не так...')\n          }\n\n// ====================================================================================================================================================================\n\n        } else {\n          let result = {\n            message: 'Всё ок :Р'\n          };\n          alert(result.message);\n          form.reset();\n        }\nform.classList.remove('_sending');\n      } else {\n        alert('Заполните поля!')\n      }\n    }\n\n    form.addEventListener(\"submit\", formSend);\n  });\n}\n\n// ====================================================================================================================================================================; // Проверка и отправка формы без перезагрузки страницы.\n\n// ===================================================================================================================================================================="],"file":"global.js"}